DORB Logistics

Wordt alles gebracht op de dag dat de klant aangeeft?
Wat als die dag niet kan?
Wat betekend rijbewijs tot, moet die dag de rijbewijs gedaan worden?
Staan de werkdagen vast of moet er gekeken worden hoeveel ze al gewerkt hebben in een week?
Moet wachtwoord gehashed zijn?
Wat moeten planners doen? (kenteken inplannen?)
(Kunnen klanten alleen datum per adres maken?)(??)
Wie moeten de vrachtwagen inladen?
Moet een klant ingelogd zijn?
Moet de routbeschrijving google maps zijn?
Moet het web zijn?
Moet er rekening gehouden worden met de afstanden tussen de adressen?

(hb je rekening gehouden met de rijbewijs?) (opgelost)
(werkdagen per week)
(managers krijgen lijstjes)(vraag nader)

(hash is one-way-ticket, use encryption/decryption) <<<< nog doen!!!
(::: hoeveelheid per vrachtwagen)
=============================================
Adres:
Zijpendaalseweg 167
6814 CJ Arnhem
Nederland

=============================================
Vrachtwagens:

CF 300 FA:
- 11 (wagens)
- 10 (pallets)
- rijbewijs (C, D)

CF 410 FTN
- 6 (wagens)
- 20 (pallets)
- (houd rekening met de volgorde van de pallets)
- rijbewijs (C, D)

XF 430 FMT
- 3 (wagens)
- 30 (pallets)
- 10 (in aanhanger)
- 20 (in oplegger)
- (houd rekening met de volgorde van de pallets (aanhanger moet eerst leeg))
- rijbewijs (D)


- ruimte
- rijbewijs (datum) (nietbeschikbaar)
- beschikbaarheid (beschikbaar, nietbeschikbaar)
  - (nietbeschikbaar met onderhoud en als hij weg is)
  - (beschikbaar als hij er is)
============================================
Users:

Chauffeurs:
- 25 (chauffeurs)
- nationaliteit (Nederland, Duitsland, Luxemburg, Belgie)
- rijbewijs (C, D)
- voornaam
- tussenvoegsel
- achternaam
- werkdagen (min 1, max 5)
- user_Id
- wachtwoord
- pagina:
  - werk rooster
    - datum:
      - datum
      - ruimte
      - vrachtwagen
      - datum
  - route beschrijving

Planners:
- 5 (planners)
- voornaam
- tusselvoegsel
- achternaam
- user_Id
- wachtwoord
- pagina:
  - pallets in vrachtwagen (filter op datum)
    - (filter alle orders van die dag op de kenteken van hier vandaan, zet dat in volgorde)
    - Lijst met orders en pallets

Managers:
- 2 (managers)
- voornaam
- tussenvoegsel
- achternaam
- wachtwoord
- pagina:
  - crud:
    - orders
    - chauffeurs
    - managers
    - planners
    - vrachtwagens
    - prijzen

Klanten:
- voornaam
- tussenvoegsel
- achternaam
- rekeningnummer
- kan orders maken
- pagina:
  - datum maken pagina

============================================
[Systeem]Prijs (input van _long pallets, [systeem]route.kenteken):

1 Pallet:
- +0,50 * kenteken

2 v 3 Pallet:
- +0,45 * kenteken

4 v 5 Pallet:
- +0,40 * kenteken

6 -> Pallet:
- +0,35 * kenteken

Nederland:
- +0,00

Duitsland:
- +25,00

Belgie:
- +15,00

Luxemburg:
- +20,00

(prijzen uit db)
(facaturen naar het rekening nummer van de klant)

============================================
[systeem]Route (input van adress):

(return kenteken voor user_Id, natio voor orders, route voor chauffeurs)
(maak een lijst met de adressen en laad ze dan in in google maps 
en als hij daar is ga dan naar de volgende ruimte)


============================================
[systeem]Orders (filter):

Klant:
- ruimte
  - welk natio (kortste route)
- pallets (_long)
- datum (alle bestellingen worden in 1 dag wegebracht)

Vrachtwagen (input _long pallets, datum):
- beschikbaarheid
  - is hij beschikbaar die dag 
  - is hij in onderhoud
- grootte (type vrachtwagen)
  - hoeveel pallets in vrachtwagen (pallets (na orde) - pallets die er geordend worden)
(anders nog een vrachtwagen)

Chauffeurs (input vrachtwagen, datum, [systeem]route.natio)
- rijbewijs
  - mag de chauffeur wel op de vrachtwagen
- datum
  - kan de chauffeur op die datum
  - (kan de chauffeur wel in de week of heeft hij al gewerkt)
- nationaliteit
  - kan de chauffeur wel naar dat natio?

Prijs (input pallets, [systeem]user_Id)
- check pallets
  - * kenteken
- check natio

Totaal (return)
- Klant
- Vrachtwagen
- Chauffeur
- Adres
- Prijs
- datum
- _long pallets
- ruimte over in vrachtwagen (_long pallets)

(facaturen naar het rekeningnummer van de klant) (?? klopt niet meer)
(bij totaal pas naar db -> orders)

============================================
Database:

Nationaliteit:
- nat_Id
- natio

Chauffeurs:
- user_Id
- vooraam
- tussenvoegsel
- achternaam
- rijbewijs (key) (kunnen meerdere)
- nat_Id (key) (kunnen meerdere)
- werkdagen (_long)
- user_Id
- wachtwoord

Planners:
- user_Id
- voornaam
- tussenvoegsel
- achternaam
- user_Id
- wachtwoord

Managers:
- user_Id
- voornaam
- tussenvoegsel
- achternaam
- user_Id
- wachtwoord

Prijzen:
- prijs_Id
- pallets
- user_Id
- nat_Id (key)
(oproepen met get user_Id where (landen/pallets) = ...)

Orders:
- order_Id
{
- voornaam
- tussenvoegsel
- achternaam
- rekeningnummer
}
(- vrachtwagen_Id (key) (??))
(- user_Id (key) (??))
- ruimte
- user_Id
- datum
- _long pallets
- rit_Id (key) (kunnen meerdere zijn)

(Klant:
- user_Id
- voornaam
- tussenvoegsel
- achternaam
- rekeningnummer)

Typevrachtwagens:
- type
- type
- ruimte
- rijbewijs (key) (kunnen meerdere)
- grootst (boolean)

Rit:
- rit_Id
- ruimte (_long pallets na datum) (??)
- datum
(- datum (key) (kunnen meerdere))
- vrachtwagen_Id (key)
- user_Id (key)

Vrachtwagens:
- vrachtwagen_Id
- type (key)
- ruimte
- rijbewijs tot
- grootst (enum) (beschikbaar, onderhoud)

Rijbewijs:
- rijbewijs
- rijbewijs


(hoeveel pallets kunnen er nog in de vrachtwagen na de orde)

============================================
Na login:
- welke database van users
- user_Id

============================================
Curd:

Orders:
- verwijderen
- (als meer moet moet hij weer door de datum filter)

Chauffeurs:
- toevoegen
- verwijderen
- vooraam
- tussenvoegsel
- achternaam
- rijbewijs (spinner v radiobutton)
- nationaliteit (spinner met alle opties van nationaliteit)
- werkdagen (_long)
- user_Id
- wachtwoord

Managers:
- voornaam
- tussenvoegsel
- achternaam
- user_Id
- wachtwoord

Admins:
- voornaam
- tussenvoegsel
- achternaam
- user_Id
- wachtwoord

Klanten:
- voornaam
- tussenvoegsel
- achternaam
- user_Id
- wachtwoord

Planners:
- voornaam
- tussenvoegsel
- achternaam
- user_Id
- wachtwoord

Vrachtwagens:
- type vrachtwagen (spinner met alle opties van type vrachtwagen)
- ruimte
- rijbewijs tot
- grootst (spinner v radiobutton)

Prijzen:
- user_Id

=============================================
Wireframes

- login
  - button voor klant
- curd orders
- curd chauffeurs
- crud managers
- crud vrachtwagens
- crud prijzen
- crud planners

- orders maken
- werkrooster
- adres lijst
- route beschrijving

- (bij alles kan uitloggen)

===============================================
ingelogd klanten
20 pallets (max)
altijd een bestelling in een vrachtwagen
naar planner als datum niet klopt
admin registreerd klanten

offerte = extra validatie na orde maken


ja
planner probleem (die moet oplossen, zet naar dashboard)
die dag als uitterste, 1 dag
planners: plannen ritten dus met orders bezig zijn
vaste dagen chauffeurs
hashed
systeem kan herplannen uiteindelijk maar eerst die planners dat
inladen (chauffeurs)
google maps gebruik

rekening met de route niet de landen

===============================================
//region [Rittencheck]
    //if rit !exists where datum == datum
            //return false
        //if rit exists where datum == datum
                //rit_Id *
                //ruimte
                //vrachtwagen_Id
                //chauffeur_Id *
        // get typ_Id from vrachtwagen where vrachtwagen_Id == vrachtwagen_Id
        // get ruimte van vrachtwagenType where typ_Id == typ_Id
        // if ruimte + palletAantal !> ruimte vrachtwagenType
            //db update rit in ruimte where rit_Id == rit_Id
            //return true
        // if ruimte + palletAantal > ruimte vrachtwagenType
            // get grootst van vrachtwagenType
                // if grootst
                    //return false
                //if !grootst
                    //boolean check(typ_Id){
                    //typ_++
                    //get ruimte van vrachtwagenType where typ_Id == typ_Id++
                    // if ruimte + palletAantal > ruimte vrachtwagenType
                        // get grootst van vrachtwagenType
                            // if grootst
                                //return false
                            //if !grootst
                                //check(type_Id)
                        // if ruimte + palletAantal !> ruimte vrachtwagenType
                            //return typ_Id
                        //}
                        //findVrachtwagen(typ_++){
                            //get ruimte van typeVrachtwagens where typ_Id == typ_Id++(????????)
                            //get vrachtwagen_Id van rit where datum == datum
                            //get vrachtwagen_Id van vrachtwagen where status == beschikbaar && typ_Id == typ_Id++
                            //if vrachtwagen_Id != vrachtwagen_Id
                                //add to List(vrachtwagen_Id)
                                    //if List == null
                                        //return false
                                    //if List != null
                                        //get List(0) vrachtwagen_Id


                            //get rijbewijs van typeVrachtwagens where typ_Id == typ_Id
                            //get rijbewijs van chauffeurs where chauffeur_Id == chauffeur_Id*
                                //if rijbewijs_Id != rijbewijs_Id
                                    //get adres van order where rit_Id == rit_Id *

                                        //land = route(adres)
                                            //if findChauffeur(datum, vrachtwagen_Id, land) == null
                                                //return false
                                            //if findChauffeur(datum, vrachtwagen_Id, land) != null
                                                //db update rit in vrachtwagen_Id && ruimte && chauffeur_Id where rit_Id == rit_Id
                                                //return true

                                //if rijbewijs_Id == rijbewijs_Id
                                    //db update rit in vrachtwagen_Id && ruimte where rit_Id == rit_Id
                                    //return true

                                        //check ook op het land van nieuwe orde
//endregion

//region [Chauffeurcheck]
    //vrachtwagen_Id, land_Id*, datum
    //get typ_Id van vrachtwagen where vrachtwagen_Id == vrachtwagen_Id
    //get rijbewijs van Typevrachtwagens where typ_Id == typ_Id

    //get chauffeur_Id van rit where datum == datum
    //get user_Id van chauffeurs where rijbewijs == rijbewijs
    //for(user :user_Id)
        //get land_Id van nationaliteit where chauffeur_Id == user_Id
        //for(land: land_Id)
            //if land_Id == land_Id*
                //add use_Id to vrachtwagenList
    //if chauffeur_Id == user_Id(vrachtwagenList)
        //return false
    //if chauffeur_Id != user_Id
        //add to vrachtwagenList
//endregion

//region [Vrachtwagencheck]

    //pallet aantal, datum
    //volgende = (checkvolgorde(0, pallet aantal, 0))
    //get typ_Id van typevrachtwagens where volgorde == volgende
    //get vrachtwagen_Id van rit where datum == datum
    //get vrachtwagen_Id van vrachtwagens where status == beschikbaar && typ_Id == typ_Id && apk != datum
    //if vrachtwagen_Id == vrachtwagen_Id)\
        //return null
    //if vrachtwagen_Id != vrachtwagen_Id
        //add to vrachtwagenList

//endregion

//region [Prijsberekenen]
    //km, land, aantal pallets
    //get prijs van prijzen where wat == land
    //get prijs van prijzen where wat == pallet aantal
    //prijs(pallet) * km + prijs(land)
//endregion


===========================================================
/*private void test(Button... buttons){ // set as many buttons
		for(Button button: buttons){
			//do stuff with button all buttons
		}
	}*/


